<?php
// $Id$

/**
 * @file
 * Provides artist info pages
*/

/**
* Implementation of hook_menu().
*/
function offthechart_front_end_menu() {
  $items['music'] = array(
    'title' => 'Music',
    'page callback' => 'offthechart_front_end_music',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['music/artist'] = array(
    'title' => 'MusicBrainz Artist Lookup',
    'page callback' => 'offthechart_front_end_music_artist',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['music/playlists'] = array(
    'title' => 'Playlists',
    'page callback' => 'offthechart_front_end_music_playlists',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['schedule'] = array(
    'title' => 'Schedule',
    'page callback' => 'offthechart_front_end_schedule',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['shows'] = array(
    'title' => 'DJs & Shows',
    'page callback' => 'offthechart_front_end_shows',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $items;
} // function offthechart_music_menu()

function offthechart_front_end_music() {
  $output = "";
  $output .= "<h3>Show Playlists</h3>";
  $output .= "<p>Wondering what that track was? You can find all of our show playlists online. Just head on over to our <a href=\"/shows\">shows page</a> and click the 'Playlists' link next to a DJ or show.</p>";
  $output .= "<h3>Last.FM</h3>";
  $output .= "<p>We scrobble most of what we play to Last.FM, and we're gradually doing more. If you have an account, why not add <a href=\"http://www.last.fm/user/offthechart\" target=\"_blank\">our account</a> as a friend and find out how compatible your taste is with us?</p>";
  $output .= "<h3>Recent Tracks</h3>";
  $recentquery = db_query("SELECT * FROM (SELECT * FROM {otc_playlist_tracks} ORDER BY playlist_track_timestamp DESC LIMIT 10) AS {otc_playlist_tracks} LEFT JOIN {otc_tracks} ON {otc_playlist_tracks}.playlist_track_id = {otc_tracks}.track_id LEFT JOIN {otc_artists} ON {otc_tracks}.artist_id = {otc_artists}.artist_id");
  $dbrecentlist = $recentquery->fetchAll();
  $output .= "<table style=\"min-width: 500px; width: 500px\">";
  
  for ($i=0;$i<sizeof($dbrecentlist);$i++) {
    $playlistid = $dbrecentlist[$i]->playlist_id;
    $showquery = db_query("SELECT schedule_title,schedule_uid,schedule_show_id,schedule_start,schedule_minisite FROM {otc_schedule} WHERE schedule_playlisted = '$playlistid' OR schedule_playlist_draft = '$playlistid' LIMIT 1");
    $dbshowlist = $showquery->fetch();
    $trackarray = array("Unknown",0,"");
    if ($dbshowlist != "") {
        $showtitle = $dbshowlist->schedule_title;
        $showuid = $dbshowlist->schedule_uid;
        $showshowid = $dbshowlist->schedule_show_id;
        $showsite = $dbshowlist->schedule_minisite;
        $showstart = strtotime($dbshowlist->schedule_start);
          if ($showuid != 0) {
            // Query the user name
            $shownamequery = db_query("SELECT name FROM {users} WHERE uid = '$showuid'");
            $showminisitequery = db_query("SELECT value FROM {profile_value} INNER JOIN {profile_field} ON {profile_value}.fid = {profile_field}.fid WHERE {profile_value}.uid = '$showuid' AND {profile_field}.name = 'profile_otc_minisite'");
            $shownames = $shownamequery->fetch();
            $showsites = $showminisitequery->fetch();
            if (($showtitle == "") AND (sizeof($shownames) > 0)) {
              $showtitle = $shownames->name;
            }
            if (($showsite == "") AND (sizeof($showsites) > 0)) {
              $showsite = $showsites->value;
            }
          } else if ($showshowid != 0) {
            // Query the show name
            $shownamequery = db_query("SELECT show_title, show_minisite FROM {otc_shows} WHERE show_id = '$showshowid'");
            $shownames = $shownamequery->fetch();
            if (sizeof($shownames) > 0) {
              if ($showtitle == "") {
                $showtitle = $shownames->show_title;
              }
              if ($showsite == "") {
                $showsite = $shownames->show_minisite;
              }
            }
          }
        $trackarray = array($showtitle,$showstart,$showsite);
    }
    
    $artist = $dbrecentlist[$i]->artist_name;
    $unsigned = $dbrecentlist[$i]->artist_unsigned;
    $title = $dbrecentlist[$i]->track_name;
    $mix = $dbrecentlist[$i]->track_mix;
    $mbid = $dbrecentlist[$i]->artist_mbid;
    $playedat = $dbrecentlist[$i]->playlist_track_timestamp;
    //$playedat = date("H:i (d/m/y)",$playedat);
    $playedat = date("H:i",$playedat);
    if ($mix != "") {
      $mix = " (" . $mix . ")";
    }
    $url_end = $title;
    if ($mbid != "") {
      $url_end = $mbid;
    }
    if ($unsigned == 1) {
      $output .= "<tr><td style=\"padding-left: 1px; padding-right: 10px; white-space: nowrap; width: 120px; max-width: 120px\">" . $title . $mix . " by " . $artist;
    } else {
      $output .= "<tr><td style=\"padding-left: 1px; padding-right: 10px; white-space: nowrap; width: 120px; max-width: 120px\">" . $title . $mix . " by <a href=\"/music/artist/" . $artist . "/" . $url_end . "\">" . $artist . "</a>";
    }
    $playedby = $trackarray[0];
    if ($trackarray[2] != "") {
      $playedby = "<a href=\"/" . $trackarray[2] . "\">" . $playedby . "</a>";
    }
    if ($dbrecentlist[$i]->playlist_track_timestamp != 0) {
      $output .= " played by " . $playedby . " @ " . $playedat . "</td></tr>";
    } else {
      $output .= " played by " . $playedby . " after " . date("H:i",$trackarray[1]) . "</td></tr>";
    }
  }
  
  
  
  
  $output .= "</table>";
  $output .= "<h3>Most Played This Week</h3>";
  $timenow = time();
  $lasttime = time() - (86400*7);
  $mostplayedquery = db_query("SELECT * FROM (SELECT *,COUNT(playlist_track_id) AS track_count FROM {otc_playlist_tracks} WHERE playlist_track_timestamp <= '$timenow' AND playlist_track_timestamp > '$lasttime' GROUP BY playlist_track_id ORDER BY COUNT(playlist_track_id) DESC LIMIT 10) AS {otc_playlist_tracks} LEFT JOIN {otc_tracks} ON {otc_playlist_tracks}.playlist_track_id = {otc_tracks}.track_id LEFT JOIN {otc_artists} ON {otc_tracks}.artist_id = {otc_artists}.artist_id");
  $dbplayedlist = $mostplayedquery->fetchAll();
  $output .= "<table style=\"min-width: 350px; width: 350px\">";
  for ($i=0;$i<sizeof($dbplayedlist);$i++) {
    $artist = $dbplayedlist[$i]->artist_name;
    $unsigned = $dbplayedlist[$i]->artist_unsigned;
    $title = $dbplayedlist[$i]->track_name;
    $mix = $dbplayedlist[$i]->track_mix;
    $mbid = $dbplayedlist[$i]->artist_mbid;
    $count = $dbplayedlist[$i]->track_count;
    if ($mix != "") {
      $mix = " (" . $mix . ")";
    }
    $url_end = $title;
    if ($mbid != "") {
      $url_end = $mbid;
    }
    if ($unsigned == 1) {
      $output .= "<tr><td style=\"padding-left: 1px; padding-right: 10px; white-space: nowrap\">" . $title . $mix . " by " . $artist . "</td><td style=\"white-space: nowrap\">" . $count . " plays</td></tr>";
    } else {
      $output .= "<tr><td style=\"padding-left: 1px; padding-right: 10px; white-space: nowrap\">" . $title . $mix . " by " . "<a href=\"/music/artist/" . $artist . "/" . $url_end . "\">" . $artist . "</a></td><td style=\"white-space: nowrap\">" . $count . " plays</td></tr>";
    }    
  }
  $output .= "</table>";
  return t($output);
}

function offthechart_front_end_music_playlists($show = '', $date = '') {

  if (isset($_GET['playlist'])) {
    $date = $_GET['playlist'];
  }
  
  if (isset($_GET['show'])) {
    header("Location: http://www.offthechartradio.co.uk/music/playlists/" . $_GET['show']);
  }

  if (stristr($show,";") OR stristr($date,";")) {
    die("Hacking attempt");
  }

  if (isset($date)) {
    $date = trim($date);
  }
  $show = trim($show);
  
  if (($show == "") OR ($show == "0")) {
    // Alternative processing to give a selection box
    $output = "<script type=\"text/javascript\">function loadShow() { ";
    $output .= "var e = document.getElementById(\"show-select\");";
    $output .= "var page = e.options[e.selectedIndex].value;";
    $output .= "location.href = \"/music/playlists/\" + page ;";
    $output .= "}</script>";
    
    $djquery = db_query("SELECT {users}.name AS name FROM {users} INNER JOIN {users_roles} ON {users_roles}.uid = {users}.uid LEFT JOIN {role} ON {role}.rid = {users_roles}.rid WHERE status = '1' AND {role}.name = 'DJs'");
    $showquery = db_query("SELECT show_title FROM {otc_shows}");
    
    $showarray = array();
    
    $djinfo = $djquery->fetchAll();
    for ($i = 0;$i<sizeof($djinfo);$i++) {
      $showarray[] = $djinfo[$i]->name;
    }
    
    $showinfo = $showquery->fetchAll();
    for ($i = 0;$i<sizeof($showinfo);$i++) {
      $showarray[] = $showinfo[$i]->show_title;
    }
    
    array_multisort($showarray,SORT_ASC);
    
    $output .= "<p>Please select a DJ or show to view playlists</p><form>";
    if (sizeof($showarray) == 0) {
      $output .= "<select name=\"shows\" disabled><option value=\"0\">No shows found</option></select>";
    } else {
      $output .= "<select name=\"show\" id=\"show-select\" onchange=\"javascript:loadShow()\"><option value=\"0\">Please select a DJ or show</option><option value=\"Auto DJ\">Auto DJ</option>";
      for ($i=0;$i<sizeof($showarray);$i++) {
        $output .= "<option value=\"" . $showarray[$i] . "\">" . $showarray[$i] . "</option>";
      }
      $output .= "</select>&nbsp;&nbsp;<input type=\"submit\" value=\"View\" /><br /><br />";
    }
    return t($output);
  }

  $output = "<script type=\"text/javascript\">function loadPlaylist() { ";
  $output .= "var e = document.getElementById(\"playlist-select\");";
  $output .= "var page = e.options[e.selectedIndex].value;";
  $output .= "location.href = \"/music/playlists/\" + document.getElementById(\"show-name\").value + \"/\" + page;";
  $output .= "}</script>";
  $djid = 0;
  $showid = 0;
  $name = "";
  $automation = false;
  
  if (strtolower($show) == "auto dj") {
    $automation = true;
    $name = "Auto DJ";
  } else {

    $djquery = db_query("SELECT uid,name FROM {users} WHERE name = '$show' LIMIT 1");

    $djinfo = $djquery->fetch();
    
    if (is_object($djinfo)) {
      $djid = $djinfo->uid;
      $name = $djinfo->name;
    } else {
        $showquery = db_query("SELECT show_id,show_title FROM {otc_shows} WHERE show_title = '$show' LIMIT 1");

        $showinfo = $showquery->fetch();

        if (is_object($showinfo)) {
          $showid = $showinfo->show_id;
          $name = $showinfo->show_title;
        }
    }
  }

  if (($djid == 0) AND ($showid == 0) AND (!$automation)) {
    $output .= "<p>The system could not find a DJ or show with the name specified.<br /><br />";
    $output .= "If you ended up here having followed a link from our DJ page, please report this to engineering via our <a href=\"/contact\">contact</a> page.</p>";
  } else {
    drupal_set_title($name . ": Playlists");

    $currenttime = time();
    $currentshowquery = db_query("SELECT schedule_id FROM {otc_schedule} WHERE `schedule_start` <= FROM_UNIXTIME('$currenttime') ORDER BY `schedule_start` DESC LIMIT 1");
    $currentshowinfo = $currentshowquery->fetch();
    $currentid = 0;
    if (is_object($currentshowinfo)) {
      $currentid = $currentshowinfo->schedule_id;
    }
    if ($automation) {
      $plquery = db_query("SELECT schedule_start,schedule_playlisted,schedule_replay_orig_id,schedule_show_type FROM {otc_schedule} WHERE schedule_show_type = '3' AND `schedule_start` <= FROM_UNIXTIME('$currenttime') AND schedule_id != '$currentid' ORDER BY `schedule_start` DESC LIMIT 100");
    } else if ($djid != 0) {
      $plquery = db_query("SELECT schedule_start,schedule_playlisted,schedule_replay_orig_id,schedule_show_type FROM {otc_schedule} WHERE schedule_uid = '$djid' AND `schedule_start` <= FROM_UNIXTIME('$currenttime') AND schedule_id != '$currentid' AND schedule_show_type < 3 ORDER BY `schedule_start` DESC LIMIT 100");
    } else {
      $plquery = db_query("SELECT schedule_start,schedule_playlisted,schedule_replay_orig_id,schedule_show_type FROM {otc_schedule} WHERE schedule_show_id = '$showid' AND `schedule_start` <= FROM_UNIXTIME('$currenttime') AND schedule_id != '$currentid' AND schedule_show_type < 3 ORDER BY `schedule_start` DESC LIMIT 100");
    }
    $output .= "<form>";
 
    $activepl = false;

    $playlistid = 0;
    $dbschedulelist = $plquery->fetchAll();

    $playlist_date = "";
    if (sizeof($dbschedulelist) == 0) {
      $output .= "<select name=\"playlist\" disabled><option value=\"0\">No playlists found</option></select>";
    } else {
      $output .= "<input type=\"hidden\" id=\"show-name\" value=\"" . $name . "\" />";
      $output .= "<select name=\"playlist\" id=\"playlist-select\" onchange=\"javascript:loadPlaylist()\"><option value=\"0\">Please select a playlist</option>";
      $selected = "";
      $showtype = "";
      $origstart = 0;
      $repstart = 0;
      for ($i=0;$i<sizeof($dbschedulelist);$i++) {
        $timeval = strtotime($dbschedulelist[$i]->schedule_start);
        if ($date == $dbschedulelist[$i]->schedule_start) {
          $origstart = $timeval;
          if ($dbschedulelist[$i]->schedule_show_type != 2) {
            $playlistid = $dbschedulelist[$i]->schedule_playlisted;
	        } else {
            $showtype = 2;
            $replayquery = db_query("SELECT schedule_start,schedule_playlisted FROM {otc_schedule} WHERE schedule_id = '" . $dbschedulelist[$i]->schedule_replay_orig_id . "' LIMIT 1");
            $replaylist = $replayquery->fetch();
            if ($replaylist) {
              $repstart = strtotime($replaylist->schedule_start);
  	      $playlistid = $replaylist->schedule_playlisted;
            } else {
              $playlistid = 0;
            }
          }
          $selected = "selected";
          $playlist_date = date("l, jS F Y - H:i",$timeval);
          $activepl = true;
        } else {
          $selected = "";
        }
        $output .= "<option value=\"" . $dbschedulelist[$i]->schedule_start . "\" " . $selected . ">" . date("l, jS F Y - H:i",$timeval);
        if ($dbschedulelist[$i]->schedule_show_type == 2) {
	  $output .= " (R)";
        }
	$output .= "</option>";
      }
      $output .= "</select>&nbsp;&nbsp;<input type=\"submit\" value=\"View\" /><br />";
    }

    $output .= "</form>";

    $output .= "<table style=\"border: solid #C0C0C0 1px\"><tr style=\"font-weight: bold;border: solid #C0C0C0 1px\"><td>Artist</td><td>Title</td><td>Played At</td></tr>";
    if ($playlistid > 1) {
      $pltracks = db_query("SELECT * FROM {otc_playlist_tracks} LEFT JOIN {otc_tracks} ON {otc_playlist_tracks}.playlist_track_id = {otc_tracks}.track_id LEFT JOIN {otc_artists} ON {otc_tracks}.artist_id = {otc_artists}.artist_id WHERE playlist_id = '$playlistid' ORDER BY playlist_track_order ASC, playlist_track_timestamp ASC");
      $dbtracklist = $pltracks->fetchAll();
      if (sizeof($dbtracklist) == 0) {
        $output .= "<tr><td colspan=\"4\" style=\"text-align: center\">It looks like this playlist is empty. Sorry about that, something's clearly gone a bit wrong!</td></tr>";
      }
      if ($playlist_date != "") {
        drupal_set_title($name . ": Playlists - " . $playlist_date);
      }
      for ($i=0;$i<sizeof($dbtracklist);$i++) {
        $artist = $dbtracklist[$i]->artist_name;
        $unsigned = $dbtracklist[$i]->artist_unsigned;
        $title = $dbtracklist[$i]->track_name;
        $mix = $dbtracklist[$i]->track_mix;
        $mbid = $dbtracklist[$i]->artist_mbid;
        if ($mix != "") {
          $mix = " (" . $mix . ")";
        }
        $url_end = $title;
        if ($mbid != "") {
          $url_end  = $mbid;
        }
        $playedat = $dbtracklist[$i]->playlist_track_timestamp;
        if ($playedat == 0) {
          $playedat = "";
        } else {
          if ($showtype == 2) {
       	    $playedat = ($origstart - $repstart) + $playedat;
          } 
          $playedat = date("H:i",$playedat);
        }
        if ($unsigned == 1) {
          $output .= "<tr><td>" . $artist . "</td><td>" . $title . $mix . "</td><td>" . $playedat . "</td></tr>";
        } else {
          $output .= "<tr><td><a href=\"/music/artist/" . $artist . "/" . $url_end . "\">" . $artist . "</a></td><td>" . $title . $mix . "</td><td>" . $playedat . "</td></tr>";
        }
      }
      
    } else if ($playlistid == 1) {
      if ($playlist_date != "") {
        drupal_set_title($name . ": Playlists - " . $playlist_date);
      }
      $output .= "<tr><td colspan=\"4\" style=\"text-align: center\">Sorry! Unfortunately this playlist is in an old format and could not be loaded for viewing.</td></tr>";
    } else {
      if ($activepl) {
        if ($playlist_date != "") {
          drupal_set_title($name . ": Playlists - " . $playlist_date);
        }
        $output .= "<tr><td colspan=\"4\" style=\"text-align: center\">It doesn't look like we've got round to processing this playlist yet. Please check again soon.</td></tr>";
      } else {
        $output .= "<tr><td colspan=\"4\" style=\"text-align: center\">-- No playlist selected --</td></tr>";
      }
    }

    $output .= "</table>";

  }

  return t($output);
}

function offthechart_front_end_music_artist($artist = '', $track = '', $mbid = '') {

  include('content.php');

  $artist = str_replace("amp;","",$artist);
  $track = str_replace("amp;","",$track);

  if (stristr($mbid,";") OR stristr($artist,";") OR stristr($track,";")) {
    die("Hacking attempt");
  }

  $artist = trim($artist);
  $artist_url = $artist;
  
  if (stristr($artist,"content.php")) {
    header("Location: /music");
  }

  if (isset($track)) {
    $track = trim($track);
  }
  if (isset($mbid)) {
    $mbid = trim($mbid);
    if (stristr($mbid,".") OR (strlen($mbid) > 50)) {
      $mbid = "";
    } else if (preg_match('/^\w{8}-\w{4}-\w{4}-\w{4}-\w{12}$/',$mbid,$matches) != 1) {
      $mbid = "";
    }
  }
  if (preg_match('/^\w{8}-\w{4}-\w{4}-\w{4}-\w{12}$/',$track,$matches) == 1) {
    $mbid = $track;
    $track = "";
  }

  $artisttwitter = "";
  $artistfacebook = "";

  if ($artist != "") {
    if ($mbid != "") {
      $artistquery = db_query("SELECT artist_id,artist_mbid,artist_twitter,artist_facebook FROM {otc_artists} WHERE {otc_artists}.artist_name LIKE '" . addslashes($artist) . "' OR {otc_artists}.artist_mbid  = '$mbid' LIMIT 1");
    } else {
      $artistquery = db_query("SELECT artist_id,artist_mbid,artist_twitter,artist_facebook FROM {otc_artists} WHERE {otc_artists}.artist_name LIKE '" . addslashes($artist) . "' LIMIT 1");
    }
    $artistinfo = $artistquery->fetch();
    
    if (is_object($artistinfo)) {
      $artistid = $artistinfo->artist_id;
      $mbid = $artistinfo->artist_mbid;
      $artisttwitter = $artistinfo->artist_twitter;
      $artistfacebook = $artistinfo->artist_facebook;
      if ($mbid != "") {
	$mbidstored = true;
      }
    }
  }

  if (($artist != "") OR ($mbid != "")) {

    if ($mbid == "") {
      // Do MusicBrainz query for artist mbid
      require_once("phpbrainz/phpBrainz.class.php");
      //Create new phpBrainz object
      $phpBrainz = new phpBrainz();
      if ($track == "") {
        $track = "a";
      }
      $args = array(
        "title"=>str_replace("&amp;","and",strtolower(htmlspecialchars(utf8_encode($track), ENT_COMPAT, 'UTF-8'))),
        "artist"=>str_replace("&amp;","and",strtolower(htmlspecialchars(utf8_encode($artist), ENT_COMPAT, 'UTF-8')))
      );
      $trackFilter = new phpBrainz_TrackFilter($args);
      if ($trackFilter) {
        $trackResults = $phpBrainz->findTrack($trackFilter);
      }
      if ($trackResults) {
        $mbartistobj = $trackResults[0]->getArtist();
        $mbid = $mbartistobj->getId();
      }
      if ($mbid == "") {
        $track = "a";
        $phpBrainz = new phpBrainz();
        $args = array(
          "title"=>str_replace("&amp;","and",strtolower(htmlspecialchars(utf8_encode($track), ENT_COMPAT, 'UTF-8'))),
          "artist"=>str_replace("&amp;","and",strtolower(htmlspecialchars(utf8_encode($artist), ENT_COMPAT, 'UTF-8')))
        );
        $trackFilter = new phpBrainz_TrackFilter($args);
        if ($trackFilter) {
          $trackResults = $phpBrainz->findTrack($trackFilter);
        }
        if ($trackResults) {
          $mbartistobj = $trackResults[0]->getArtist();
          $mbid = $mbartistobj->getId();
        }
      }
    }
    // $output .= image and description
    if ($mbid != "") {      
      
      $linkarray = getartistlinks($mbid);
      if (sizeof($linkarray) >= 5) {
        if ($linkarray[4] != "") {
          $artisttwitter = $linkarray[4];
        }
        if ($linkarray[3] != "") {
          $artistfacebook = $linkarray[3];
        }
      }
      
      $artisttwitter = trim(str_replace("/","",$artisttwitter));

      // Update our DB (but not the mbid if it was set by us)
      if (!isset($mbidstored) AND isset($artistid)) {
	      $updatequery = db_query("UPDATE {otc_artists} SET artist_mbid = '$mbid', artist_twitter = '$artisttwitter', artist_facebook = '$artistfacebook' WHERE artist_id ='$artistid'");
      } else if (isset($artistid)) {
        $updatequery = db_query("UPDATE {otc_artists} SET artist_twitter = '$artisttwitter', artist_facebook = '$artistfacebook' WHERE artist_id ='$artistid'");
      }

      $output = "<div style=\"min-height: 290px; margin-bottom: 15px\">";
      $descarray = getartistdescription($mbid);
      
      $element = array(
        '#tag' => 'link',
        '#attributes' => array(
          'href' => "/music/artist/" . rawurlencode(ucwords($descarray[0])) . "/" . rawurlencode($mbid), 
          'rel' => 'canonical',
        ),
      );
      drupal_add_html_head($element, 'music-canonical');
      drupal_set_title(str_replace("+","&",htmlspecialchars_decode($descarray[0],ENT_QUOTES)));
      if ($descarray[0] != "") {
        $artist = htmlspecialchars_decode($descarray[0],ENT_QUOTES);
      }
      $imageurl = getimageurl($mbid);
      $output .= "<div id=\"artist-image\"><img src=\"" . $imageurl . "\" width=\"445\" height=\"276\" align=\"left\" alt=\"" . htmlspecialchars_decode($descarray[0],ENT_QUOTES) . "\" style=\"margin-right: 15px; margin-bottom: 10px; z-index: 5\" />";
      
      $jsondata = getsongkickdata($mbid);
      $decodedjson = json_decode($jsondata,true);
      if ($decodedjson != null) {
        if ($decodedjson['resultsPage']['status'] == "ok") {
          $upcomingevents = $decodedjson['resultsPage']['totalEntries'];
          if ($upcomingevents > 0) {
            $output .= "<div id=\"ontour-image\" style=\"position: absolute\"><a href=\"#ontour\"><img src=\"/images/other/sk_ontour.png\" height=\"93\" width=\"92\" alt=\"Currently On Tour\" style=\"position:relative; left:-5px; top:-5px; z-index:10\" /></a></div>";
          }
        }
      }
      $output .= "<div id=\"credit-image\" style=\"position: absolute; font-size: 8pt; width: 440px; top: 276px; text-align: right; color: #FFFFFF; font-weight: bold; text-shadow: 0 0 2px #000; -moz-text-shadow: 0 0 2px #000; -webkit-text-shadow: 0 0 2px #000;\"><a href=\"#sources\" style=\"color: #FFFFFF\">CREDIT</a></div>";
      $output .= "</div>";
      if (isset($artistfacebook) AND isset($artisttwitter)) {
	$fbheight = "62";
	$twheight = "180";
      } else if (isset($artistfacebook)) {
	$fbheight = "62";
      } else if (isset($artisttwitter)) {
	$twheight = "265";
      }

      if ($artistfacebook != "") {
	$output .= '<div style="height: ';
	$output .= $fbheight;
	$output .= 'px; overflow: hidden"><div id="fb-root"></div><script src="http://connect.facebook.net/en_US/all.js#appId=50998785112&amp;xfbml=1"></script><fb:like href="http://www.facebook.com/' . $artistfacebook . '" send="false" width="450" show_faces="true" font=""></fb:like></div><br />';
	}
      if ($artisttwitter != "") {
	$tweets = twitter_pull_render("@" . $artisttwitter, $title = False, $num_items = 2, $themekey = False);
	if (stristr($tweets,"<li>")) {
		$output .= "<h2>Latest Tweets</h2>";
		$tweets = str_replace("<a ","<a style=\"color: #3495CE\" ",$tweets);
		$output .= "<div style=\"display: block; float: left; position: relative; width: 475px; max-width: 475px; left: -30px; min-height: ";
		$output .= $twheight;
		$output .= "px;\">" . $tweets . "</div>";
	}
      }
      if ($descarray[1] != "") {
        $output .= "<h2>Biography</h2>";
	$descarray[1] = str_replace("\n","<br />",$descarray[1]);
        $output .= "<p>" . $descarray[1] . "</p>";
      }
      $output .= "</div>";
      
      // Try and get gig info here - will then include an artist songkick page link further below
      if ($decodedjson != null) {
        if ($decodedjson['resultsPage']['status'] == "ok") {
          $upcomingevents = $decodedjson['resultsPage']['totalEntries'];
          if ($upcomingevents > 0) {
            // They're on tour
            // We need the main artist URL here - unfortunately this means some repeated code
            $artisturl = "";
            for ($i=0;$i<sizeof($decodedjson['resultsPage']['results']['event'][0]['performance']);$i++) {
              for($j=0;$j<sizeof($decodedjson['resultsPage']['results']['event'][0]['performance'][$i]['artist']['identifier']);$j++) {
                if ($decodedjson['resultsPage']['results']['event'][0]['performance'][$i]['artist']['identifier'][$j]['mbid'] == $mbid) {
                  // This is the one!
                  $artisturl = $decodedjson['resultsPage']['results']['event'][0]['performance'][$i]['artist']['uri'];
                  break;
                }
              }
            }
            $output .= "<a name=\"ontour\"></a><h2>Upcoming Gigs</h2><p>Currently touring with $upcomingevents upcoming dates.";
            if ($artisturl != "") {
              $output .= " View the full list and buy tickets via <a href=\"" . str_replace("&","&amp;",$artisturl) . "\" target=\"_blank\">SongKick</a>*";
            }
            $output .= "<br /><br />";
            if ($upcomingevents <= 3) {
              $maxevents = $upcomingevents;
            } else {
              $maxevents = 3;
            }
            for ($i=0;$i<$maxevents;$i++) {
              $output .= "<a href=\"" . str_replace("&","&amp;",$decodedjson['resultsPage']['results']['event'][$i]['uri']) . "\" target=\"_blank\">" . $decodedjson['resultsPage']['results']['event'][$i]['displayName'] . "</a>";
              $numartists = sizeof($decodedjson['resultsPage']['results']['event'][$i]['performance']);
              $isheadliner = false;
              $supporting = array();
              $supportacts = array();
              for ($j=0;$j<$numartists;$j++) {
                if ($decodedjson['resultsPage']['results']['event'][$i]['performance'][$j]['billingIndex'] == 1) {
                  for($k=0;$k<sizeof($decodedjson['resultsPage']['results']['event'][$i]['performance'][$j]['artist']['identifier']);$k++) {
                    if ($decodedjson['resultsPage']['results']['event'][$i]['performance'][$j]['artist']['identifier'][$k]['mbid'] == $mbid) {
                      $isheadliner = true;
                      break;
                    }
                  }
                  if (!$isheadliner) {
                    $supporting = array($decodedjson['resultsPage']['results']['event'][$i]['performance'][$j]['artist']['displayName'],$decodedjson['resultsPage']['results']['event'][$i]['performance'][$j]['artist']['uri']);
                  }
                } else if ($decodedjson['resultsPage']['results']['event'][$i]['performance'][$j]['billingIndex'] != 1) {
                  $supportacts[] = array($decodedjson['resultsPage']['results']['event'][$i]['performance'][$j]['artist']['displayName'],$decodedjson['resultsPage']['results']['event'][$i]['performance'][$j]['artist']['uri']);
                }
              }
              if ($isheadliner) {
                $output .= " (Headline Act)";
                if (sizeof($supportacts) == 1) {
                  $output .= "<br />Support Act: <a href=\"" . str_replace("&","&amp;",$supportacts[0][1]) . "\" target=\"_blank\">" . $supportacts[0][0] . "</a>";
                } else if (sizeof($supportacts) > 1) {
                  $output .= "<br />Support Acts: ";
                  for ($j=0;$j<sizeof($supportacts);$j++) {
                    if ($j > 0) {
                      $output .= ", ";
                    }
                    $output .= "<a href=\"" . str_replace("&","&amp;",$supportacts[$j][1]) . "\" target=\"_blank\">" . $supportacts[$j][0] . "</a>";
                  }
                  
                }
              } else {
                $output .= " (Support Act)";
                if (sizeof($supporting) == 2) {
                  $output .= "<br />Supporting: <a href=\"" . str_replace("&","&amp;",$supporting[1]) . "\" target=\"_blank\">" . $supporting[0] . "</a>";
                }
              }
              $output .= "<br />";
              $output .= "Venue: <a href=\"" . str_replace("&","&amp;",$decodedjson['resultsPage']['results']['event'][$i]['venue']['uri']) . "\" target=\"_blank\">" . $decodedjson['resultsPage']['results']['event'][$i]['venue']['displayName'] . "</a> - ";
              $output .= "Location: <a href=\"" . str_replace("&","&amp;",$decodedjson['resultsPage']['results']['event'][$i]['venue']['metroArea']['uri']) . "\" target=\"_blank\">" . $decodedjson['resultsPage']['results']['event'][$i]['location']['city'] . "</a>";
              if ($i+1 != $maxevents) {
                $output .= "<br /><br />";
              }
            }
            $output .= "</p>";
          }
        }
      }
      
      if (isset($artistid)) {
        // Recently played tracks
        $latesttracks = getlatesttracks($artistid);
        if (sizeof($latesttracks) > 0) {
          $output .= "<h2>Recently Played</h2><p>";
          for ($i=0;$i<sizeof($latesttracks);$i++) {
            $output .= $latesttracks[$i][0];
            if ($latesttracks[$i][1] != "") {
              $output .= " (" . $latesttracks[$i][1] . ")";
            }
            $playedby = $latesttracks[$i][2];
            if ($latesttracks[$i][5] != "") {
              $playedby = "<a href=\"/" . $latesttracks[$i][5] . "\">" . $playedby . "</a>";
            }
            if ($latesttracks[$i][3] == 0) {
              $output .= " played by " . $playedby . " after " . date("H:i (d/m/y)",$latesttracks[$i][4]) . "<br />";
            } else {
              $output .= " played by " . $playedby . " @ " . date("H:i (d/m/y)",$latesttracks[$i][3]) . "<br />";
            }
          }
          $output .= "</p><p>View all of our recently played tracks <a href=\"/music\">here</a></p>";
        }
        
        // Get most played tracks
        $otctracks = getmostplayed($artistid);
        if (sizeof($otctracks) > 0) {
          $output .= "<h2>Popular Tracks</h2><p>";
          for ($i=0;$i<sizeof($otctracks);$i++) {
            $output .= $otctracks[$i][0];
            if ($otctracks[$i][1] != "") {
              $output .= " (" . $otctracks[$i][1] . ")";
            }
            if ($otctracks[$i][2] == 1) {
              $output .= " (" . $otctracks[$i][2] . " play)";
            } else {
              $output .= " (" . $otctracks[$i][2] . " plays)";
            }
            $output .= "<br />";
          }
          $output .= "</p>";
        }
        
        // Get most played by...
        $otctracks = getplayedby($artistid);
        if (sizeof($otctracks) > 0) {
          $output .= "<h2>Recommended DJs &amp; Shows</h2><p>";
          for ($i=0;$i<sizeof($otctracks);$i++) {
            if ($otctracks[$i][2] != "") {
              $output .= "<a href=\"/" . $otctracks[$i][2] . "\">";
            }
            $output .= $otctracks[$i][0];
            if ($otctracks[$i][2] != "") {
              $output .= "</a>";
            }
            if ($otctracks[$i][1] == 1) {
              $output .= " (" . $otctracks[$i][1] . " play)";
            } else {
              $output .= " (" . $otctracks[$i][1] . " plays)";
            }
            $output .= "<br />";
          }
          $output .= "</p>";
        }
        
      }
      
      // Links section
      //$linkarray = getartistlinks($mbid);
      if (($descarray[2] != "") OR ($artistfacebook != "") OR ($artisttwitter != "")) {
        $output .= "<h2>Links</h2><p>";
        if ($linkarray[0] != "") {
          $output .= "<b>Official Homepage:</b> <a href=\"" . $linkarray[0] . "\" target=\"_blank\">" . $linkarray[0] . "</a><br />";
        }
        if ($linkarray[1] != "") {
          $output .= "<b>Fan Page:</b> <a href=\"" . $linkarray[1] . "\" target=\"_blank\">" . $linkarray[1] . "</a><br />";
        }
	if ($artistfacebook != "") {
	  $output .= "<b>Facebook:</b> <a href=\"http://www.facebook.com/" . $artistfacebook . "\" target=\"_blank\">http://www.facebook.com/" . $artistfacebook . "</a><br />";
	}
        if ($artisttwitter != "") {
          $output .= "<b>Twitter:</b> <a href=\"http://www.twitter.com/" . $artisttwitter . "\" target=\"_blank\">http://www.twitter.com/" . $artisttwitter . "</a><br />";
        }
        if ($linkarray[2] != "") {
          $output .= "<b>MySpace:</b> <a href=\"" . $linkarray[2] . "\" target=\"_blank\">" . $linkarray[2] . "</a><br />";
        }
        if ($descarray[2] != "") {
          $output .= "<b>Wikipedia:</b> <a href=\"" . $descarray[2] . "\" target=\"_blank\">" . $descarray[2] . "</a><br />";
        }
        $output .= "</p>";
      }
      
      
    } else {
      $element = array(
        '#tag' => 'link',
        '#attributes' => array(
          'href' => "/music", 
          'rel' => 'canonical',
        ),
      );
      drupal_add_html_head($element, 'music-canonical');
      drupal_set_title("Unknown Artist");
      $output = "<h2>Well This Is Embarrassing...</h2>";
      $output .= "<p>There doesn't appear to be any data available for the artist '" . $artist . "'. If they're a signed act, why not contribute their details to <a href=\"http://www.musicbrainz.org\" target=\"_blank\">MusicBrainz</a> and they'll show up here shortly! If they're already on MusicBrainz, drop our engineers a line with the details via our <a href=\"/contact\">contact form</a> and we'll get this sorted.</p>";
    }
    $output .= "<a name=\"sources\"></a><h2>Data Sources & Credit</h2>";
    $output .= "<p>Artist data on this page is sourced automatically by <a href=\"http://www.bbc.co.uk/music\" target=\"_blank\">BBC Music</a> and other connected sources including <a href=\"http://www.wikipedia.org\" target=\"_blank\">Wikipedia</a>, <a href=\"http://www.musicbrainz.org\" target=\"_blank\">MusicBrainz</a>, <a href=\"http://www.songkick.com\" target=\"_blank\">Songkick</a> and <a href=\"http://www.last.fm\" target=\"_blank\">Last.FM</a>. Images are the property of the relevant copyright owner and are used with thanks to photographers and photo agencies, magazines and newspapers as well as the individuals within these items. *As a non-profit making organisation Off The Chart Radio does not gain any monetary benefit from content within these pages or the sales of event tickets, and commercial advertising will never be shown alongside. Content supported by <a href=\"http://backstage.bbc.co.uk\" target=\"_blank\">backstage.bbc.co.uk</a>. Off The Chart Radio is not responsible for the content of any remote sites linked to.</p>";
  } else {
    drupal_set_title("Unknown Artist");
    //$output = "<h1 class=\"title\">Unknown Artist</h1><br />";
    $output = "<p>You must specify an artist (e.g. offthechartradio.co.uk/music/artist/Take That).</p>";
  }

  return t($output);

}
function offthechart_front_end_schedule($detail = '', $date = '') {
  $output = '';

  function getTime($datetime) {
    return date("H:i",strtotime($datetime));
  }

  function getShowDetails($dbschedulelist, $i) {
    $showdetails = array($dbschedulelist[$i]->schedule_title,$dbschedulelist[$i]->schedule_image,$dbschedulelist[$i]->schedule_minisite,$dbschedulelist[$i]->schedule_email,$dbschedulelist[$i]->schedule_forum);
    $uid = $dbschedulelist[$i]->schedule_uid;
    $show_id = $dbschedulelist[$i]->schedule_show_id;
    if ($uid != 0) {
      $userquery = db_query("SELECT * FROM {users} WHERE `uid` = '$uid'");
      $dbuserlist = $userquery->fetch();
    } else if ($show_id != 0) {
      $showquery = db_query("SELECT show_title,show_image,show_email,show_minisite,show_forum FROM {otc_shows} WHERE `show_id` = '$show_id'");
      $dbshowlist = $showquery->fetch();
    }
    for ($j=0;$j<sizeof($showdetails);$j++) {
      // Fill in the gaps
      if (($showdetails[$j] == "")  AND ($uid != 0)) {
        if (sizeof($dbuserlist) > 0) {
          switch ($j) {
            case 0:
              $showdetails[$j] = $dbuserlist->name;
              break;
            case 1:
              //TODO
              break;
            case 2:
              $query = db_query("SELECT value FROM {profile_value} INNER JOIN {profile_field} ON  {profile_value}.fid = {profile_field}.fid WHERE {profile_value}.uid = '$uid' AND {profile_field}.name = 'profile_otc_minisite'");
              $q1list = $query->fetch();
              if ((sizeof($q1list) > 0) AND (is_object($q1list))) {
                $showdetails[$j] = $q1list->value;
              }
              break;
            case 3:
              //TODO
              break;
            case 4:
              //TODO
              break;
          }
        }
      } else if (($showdetails[$j] == "")  AND ($show_id != 0)) {
        if (sizeof($dbshowlist) > 0) {
          switch ($j) {
            case 0:
              $showdetails[$j] = $dbshowlist->show_title;
              break;
            case 1:
              $showdetails[$j] = $dbshowlist->show_image;
              break;
            case 2:
              $showdetails[$j] = $dbshowlist->show_minisite;
              break;
            case 3:
              $showdetails[$j] = $dbshowlist->show_email;
              break;
            case 4:
              $showdetails[$j] = $dbshowlist->show_forum;
              break;
          }
        }
      }
    }

    return $showdetails;
  }

  if ($detail != "") {
    $previousshow = "";
    // TODO: Use Drupal forms API and date popup (or similar) to generate and submit timestamps
    // TODO: Minor: Check page can handle days when nothing is scheduled (ie giant marathon leading on from previous day)
    if ($date != '') {
      if (stristr($date,"-")) {
        $components = explode("-",$date);
        if (sizeof($components == 3)) {
          $valid = True;
          for ($i=0;$i<3;$i++) {
            if (!is_numeric($components[$i])) {
              $valid = False;
            } else if ($components[$i] < 1) {
              $valid = False;
            }
          }
          if ($valid) {
            $schedule_timestamp_temp = mktime(0,0,0,$components[1],$components[0],$components[2]);
            if ($schedule_timestamp_temp !== False) {
              $schedule_timestamp = $schedule_timestamp_temp;
            }
          }
        }
      }
    }

    if (!isset($schedule_timestamp)) {
      $schedule_timestamp = strtotime("midnight"); //  Default timestamp
    }

    $output .= "<h3>" . date("l, jS F Y",$schedule_timestamp) . "</h3>";

    $output .= '<p><a href="#early">Early</a> - <a href="#morning">Morning</a> - <a href="#afternoon">Afternoon</a> - <a href="#evening">Evening</a></p>';

    $schedule_date = strftime("%Y-%m-%d %H:%M:%S", $schedule_timestamp);
    $schedule_date_advance_hour = strftime("%H",$schedule_timestamp + 86400);
    if ($schedule_date_advance_hour == "23") {
      $schedule_date_advance = strftime("%Y-%m-%d %H:%M:%S",$schedule_timestamp + 90000);
    } else if ($schedule_date_advance_hour == "01") {
      $schedule_date_advance = strftime("%Y-%m-%d %H:%M:%S",$schedule_timestamp + 82800);
    } else {
      $schedule_date_advance = strftime("%Y-%m-%d %H:%M:%S",$schedule_timestamp + 86400);
    }
    //$output .= $schedule_date_advance;
    $eventquery = db_query("SELECT * FROM {otc_schedule} WHERE `schedule_start` >= '$schedule_date' AND `schedule_start` < '$schedule_date_advance' ORDER BY `schedule_start`");

    $dbschedulelist = $eventquery->fetchAll();

    $firstruns = array(0,0,0,0);
    for ($i=0;$i<sizeof($dbschedulelist);$i++) {
      $showdetails = getShowDetails($dbschedulelist, $i);
      if ($showdetails[0] != $previousshow) {
        $schedtime = getTime($dbschedulelist[$i]->schedule_start);
        if ($schedtime < date("H:i",strtotime("6am"))) {
          // Early
          if ($firstruns[0] == 0) {
            $output .= '<a name="early"><h2>Early</h2></a><br />';
            $firstruns[0] = 1;
          }
        } else if ($schedtime < date("H:i",strtotime("12pm"))) {
          // Morning
          if ($firstruns[1] == 0) {
            $output .= '<a name="morning"><h2>Morning</h2></a><br />';
            $firstruns[1] = 1;
          }
        } else if ($schedtime < date("H:i",strtotime("6pm"))) {
          // Afternoon
          if ($firstruns[2] == 0) {
            $output .= '<a name="afternoon"><h2>Afternoon</h2></a><br />';
            $firstruns[2] = 1;
          }
        } else {
          // Evening
          if ($firstruns[3] == 0) {
            $output .= '<a name="evening"><h2>Evening</h2></a><br />';
            $firstruns[3] = 1;
          }
        }
        $output .= "<p><b>" . getTime($dbschedulelist[$i]->schedule_start) . ": ";
        // Need to work out the show's minisite link etc - this could come from one of three sources
        // schedule_title, schedule_image, schedule_minisite, schedule_email, schedule_forum

        if ($showdetails[2] != "") {
          $output .= '<a href="/' . $showdetails[2] . '">';
        }
        if ($showdetails[0] != "") {
          $output .= $showdetails[0];
          $previousshow = $showdetails[0];
        } else {
          $output .= "Show Name TBC";
          $previousshow = "Show Name TBC";
        }
        if ($showdetails[2] != "") {
          $output .= '</a>';
        }
        if (strtotime($dbschedulelist[$i]->schedule_start) <= time()) {
          // This show *may* be on air
          $prevstart = $dbschedulelist[$i]->schedule_start;
          $nextshowquery = db_query("SELECT * FROM {otc_schedule} WHERE `schedule_start` > '$prevstart' ORDER BY `schedule_start` LIMIT 1");
          $nextshow = $nextshowquery->fetch();
          if (isset($nextshow->schedule_start)) {
            if (strtotime($nextshow->schedule_start) > time()) {
              $output .= " - <font color=\"red\">On Air</font>";
            }
          } else {
            $output .= " - <font color=\"red\">On Air</font>";
          }
        }
        $output .= "</b><br />";
        $output .= $dbschedulelist[$i]->schedule_description . "</p>";
      }
    }

    $output .= '<p>View schedules <a href="/schedule">at a glance</a></p>';


  } else {
    $output = "";
    $currentday = date("N"); // 1 to 7 (Mon - Sun)
    $previousshow = "";
    $output .= "<div id=\"schedule\">";
    for ($i=1;$i<8;$i++) { // Cycle through days from Mon to Sun
      if ($i == $currentday) {
        // Current day
        $timestamp = strtotime("6am");
        $day = date("l");
      } else if ($i > $currentday) {
        $timestamp = strtotime("6am") + (86400 * ($i - $currentday));
        $day = date("l", $timestamp);
      } else if ($i < $currentday) {
        $timestamp = strtotime("6am") + (86400 * (7 - ($currentday - $i)));
        $day = date("l", $timestamp);
      }
      $output .= '<div id="' . strtolower($day) . '" style="float: left; padding: 3px; margin-right: 4px; border: 1px solid #DDDDDD; width: 120px"><h2>';
      $output .= $day;
      $output .= "</h2>";
      $schedule_date = strftime("%Y-%m-%d %H:%M:%S", $timestamp);
      $schedule_date_advance_hour = strftime("%H",$timestamp + 86400);
      if ($schedule_date_advance_hour == "23") {
        $schedule_date_advance = strftime("%Y-%m-%d %H:%M:%S",$timestamp + 90000);
      } else if ($schedule_date_advance_hour == "01") {
        $schedule_date_advance = strftime("%Y-%m-%d %H:%M:%S",$timestamp + 82800);
      } else {
        $schedule_date_advance = strftime("%Y-%m-%d %H:%M:%S",$timestamp + 86400);
      }
      $eventquery = db_query("SELECT * FROM {otc_schedule} WHERE `schedule_start` >= '$schedule_date' AND `schedule_start` < '$schedule_date_advance' ORDER BY `schedule_start`");
      $dbschedulelist = $eventquery->fetchAll();

      for ($j=0;$j<sizeof($dbschedulelist);$j++) {
        $showdetails = getShowDetails($dbschedulelist, $j);
        if ($showdetails[0] != $previousshow) {
          $output .= "<p><strong>" . date("H:i", strtotime($dbschedulelist[$j]->schedule_start)) . "</strong>";
          if (strtotime($dbschedulelist[$j]->schedule_start) <= time()) {
            // This show *may* be on air
            $prevstart = $dbschedulelist[$j]->schedule_start;
            $nextshowquery = db_query("SELECT * FROM {otc_schedule} WHERE `schedule_start` > '$prevstart' ORDER BY `schedule_start` LIMIT 1");
            $nextshow = $nextshowquery->fetch();
            if (isset($nextshow->schedule_start)) {
              if (strtotime($nextshow->schedule_start) > time()) {
                $output .= "<strong> - <font color=\"red\">On Air</font></strong>";
              }
            } else {
              $output .= "<strong> - <font color=\"red\">On Air</font></strong>";
            }
          }
          $output .= "<br />";
          if ($showdetails[2] != "") {
            $output .= '<a href="/' . $showdetails[2] . '">';
          }
          if ($showdetails[0] != "") {
            $output .= $showdetails[0];
            $previousshow = $showdetails[0];
          } else {
            $output .= "Show Name TBC";
            $previousshow = "Show Name TBC";
          }
          if ($showdetails[2] != "") {
            $output .= '</a>';
          }
          $output .= "</p>";
        }
      }
      $output .= "</div>";
    }
    $output .= '</div><p>View schedules <a href="/schedule/detail">in detail</a></p>';
  }
  return t($output);
}

function offthechart_front_end_shows() {
  $output = "<div id=\"otc-shows\">";
  $timenow = date("Y-m-d H:i:s");
  $onairquery = db_query("SELECT schedule_title,schedule_start,schedule_uid,schedule_show_id FROM {otc_schedule} WHERE schedule_start <= '$timenow' ORDER BY `schedule_start` DESC LIMIT 1");
  $onairquerylist = $onairquery->fetch();
  // Create list of on air UIDs
  $onairdjlist = array();
  $upnextdjlist = array();
  $onairshowlist = array();
  $upnextshowlist = array();
  if (is_object($onairquerylist)) {
    $currentshowname = $onairquerylist->schedule_title;
    $currentdjid = $onairquerylist->schedule_uid;
    $currentshowid = $onairquerylist->schedule_show_id;
    if ($onairquerylist->schedule_uid != 0) {
      $onairdjlist[] = $onairquerylist->schedule_uid;
    } else if ($onairquerylist->schedule_show_id != 0) {
      $showid = $onairquerylist->schedule_show_id;
      $onairshowlist[] = $showid;
      $showquery = db_query("SELECT show_master_uid FROM {otc_shows} WHERE show_id = '$showid'");
      $showquerylist = $showquery->fetch();
      if (is_object($showquerylist)) {
        $onairdjlist[] = $showquerylist->show_master_uid;
        $showdjquery = db_query("SELECT uid FROM {otc_shows_users} WHERE show_id = '$showid'");
        $showdjquerylist = $showdjquery->fetchAll();
        if (sizeof($showdjquerylist) > 0) {
          for ($i=0;$i<sizeof($showdjquerylist);$i++) {
            $onairdjlist[] = $showdjquerylist[$i]->uid;
          }
        }
      }
    }
    $upnextshowname = $currentshowname;
    $upnextdjid = $currentdjid;
    $upnextshowid = $currentshowid;
    $continue = true;
    // Check if an up next show exists
    while (($upnextshowname == $currentshowname) AND ($upnextdjid == $currentdjid) AND ($upnextshowid == $currentshowid) AND ($continue)) {
      $upnextquery = db_query("SELECT schedule_title,schedule_start,schedule_uid,schedule_show_id FROM {otc_schedule} WHERE schedule_start > '$timenow' ORDER BY `schedule_start` ASC LIMIT 1");
      $upnextquerylist = $upnextquery->fetch();
      if (is_object($upnextquerylist)) {
        $upnextshowname = $upnextquerylist->schedule_title;
        $upnextdjid = $upnextquerylist->schedule_uid;
        $upnextshowid = $upnextquerylist->schedule_show_id;
        $timenow = $upnextquerylist->schedule_start;
      } else {
        $continue = false;
      }
    }
    if ($continue) {
      // Here we can get the up next show details as it does exist.
      if ($upnextquerylist->schedule_uid != 0) {
        $upnextdjlist[] = $upnextquerylist->schedule_uid;
      } else if ($upnextquerylist->schedule_show_id != 0) {
        $showid = $upnextquerylist->schedule_show_id;
        $upnextshowlist[] = $showid;
        $showquery = db_query("SELECT show_master_uid FROM {otc_shows} WHERE show_id = '$showid'");
        $showquerylist = $showquery->fetch();
        if (is_object($showquerylist)) {
          $upnextdjlist[] = $showquerylist->show_master_uid;
          $showdjquery = db_query("SELECT uid FROM {otc_shows_users} WHERE show_id = '$showid'");
          $showdjquerylist = $showdjquery->fetchAll();
          if (sizeof($showdjquerylist) > 0) {
            for ($i=0;$i<sizeof($showdjquerylist);$i++) {
              $upnextdjlist[] = $showdjquerylist[$i]->uid;
            }
          }
        }
      }
    }
  }
  // Work out when DJs or shows are on air during the next week
  $yesterday = date("Y-m-d",time() - 86400) . " 00:00:00";
  $today = strtotime(date("Y-m-d") . " 00:00:00");
  $nextweek = date("Y-m-d",time() + 86400*8) . " 00:00:00";
  $whenonairquery = db_query("SELECT schedule_start,schedule_title,schedule_uid,schedule_show_id,schedule_show_type FROM {otc_schedule} WHERE schedule_start >= '$yesterday' AND schedule_start < '$nextweek' ORDER BY `schedule_start` ASC");
  $whenonairlist = $whenonairquery->fetchAll();
  if (sizeof($whenonairlist) > 0) {
    $lastshowname = $whenonairlist[0]->schedule_title;
    $lastdjid = $whenonairlist[0]->schedule_uid;
    $lastshowid = $whenonairlist[0]->schedule_show_id;
    $lastschedstart = $whenonairlist[0]->schedule_start;
    $lastshowtype = $whenonairlist[0]->schedule_show_type;
    $recording = false;
  }
  $schedulelist = array();
  for ($i=0;$i<sizeof($whenonairlist);$i++) {
    $currentshowname = $whenonairlist[$i]->schedule_title;
    $currentdjid = $whenonairlist[$i]->schedule_uid;
    $currentshowid = $whenonairlist[$i]->schedule_show_id;
    $currentshowtype = $whenonairlist[$i]->schedule_show_type;
    $currentschedstart = $whenonairlist[$i]->schedule_start;
    if (isset($lastschedtime)) {
      if (strtotime($currentschedstart) >= $lastschedtime) {
        break;
      }
    }
    if (!$recording) {
      if (($currentshowname != $lastshowname) OR ($currentdjid != $lastdjid) OR ($currentshowid != $lastshowid)) {
        if (!(strtotime($currentschedstart) > $today)) {
          $lastschedstart = $currentschedstart;
        }
      }
    }
    if ((($currentshowname != $lastshowname) OR ($currentdjid != $lastdjid) OR ($currentshowid != $lastshowid)) AND ($recording)) {
      $schedulelist[] = array($currentschedstart,$currentshowname,$currentdjid,$currentshowid,$currentshowtype);
    }
    if ((strtotime($currentschedstart) > $today) AND (!$recording)) {
      $recording = true;
      $firstschedtime = $lastschedstart;
      $schedulelist[] = array($lastschedstart,$lastshowname,$lastdjid,$lastshowid,$lastshowtype);
      $schedulelist[] = array($currentschedstart,$currentshowname,$currentdjid,$currentshowid,$currentshowtype);
      $lastschedtime = strtotime($lastschedstart) + (86400*7);
    }
    $lastshowname = $currentshowname;
    $lastdjid = $currentdjid;
    $lastshowid = $currentshowid;
    $lastshowtype = $currentshowtype;
  }

  // Create mapping between DJ and show IDs
  $mapperquery = db_query("SELECT show_master_uid,show_id FROM {otc_shows}");
  $mapperlist = $mapperquery->fetchAll();
  $djlist = array();
  for ($i=0;$i<sizeof($mapperlist);$i++) {
    $djlist[$mapperlist[$i]->show_master_uid][] = $mapperlist[$i]->show_id;
    $showid = $mapperlist[$i]->show_id;
    $mapperidquery = db_query("SELECT {otc_shows_users}.uid AS uid FROM {otc_shows_users} INNER JOIN {otc_shows} ON {otc_shows_users}.show_id = {otc_shows}.show_id WHERE {otc_shows}.show_id = '$showid'");
    $mapperidlist = $mapperidquery->fetchAll();
    for ($j=0;$j<sizeof($mapperidlist);$j++) {
      $djlist[$mapperidlist[$j]->uid][] = $showid;
    }
  }

  // Create page
  $rolequery = db_query("SELECT rid FROM {role} WHERE name = 'DJs' LIMIT 1");
  $rolequerylist = $rolequery->fetch();
  if (is_object($rolequerylist)) {
    $rid = $rolequerylist->rid;
  } else {
    $rid = 0;
  }
  $output .= "<div style=\"margin-bottom: 10px; float: left; position: relative; width: 100%\">";
  $maindjquery = db_query("SELECT {users}.uid AS uid, {users}.name AS name, {users}.mail AS mail FROM {users} INNER JOIN {users_roles} ON {users}.uid = {users_roles}.uid WHERE {users_roles}.rid = '$rid' AND {users}.status = 1 ORDER BY {users}.name");
  $mainquerylist = $maindjquery->fetchAll();
  if (sizeof($mainquerylist) > 0) {
    // Continue...
    $firstrun = true;
    $lastrun = false;
    for ($i=0;$i<sizeof($mainquerylist);$i++) {
      if ($i == (sizeof($mainquerylist) - 1)) {
        $lastrun = true;
      }
      $djid = $mainquerylist[$i]->uid;
      $minisitequery = db_query("SELECT {profile_value}.value AS value FROM {profile_value} INNER JOIN {profile_field} ON {profile_value}.fid = {profile_field}.fid WHERE {profile_field}.name = 'profile_otc_minisite' AND {profile_value}.uid = '$djid'");
      $imagequery = db_query("SELECT {profile_value}.value AS value FROM {profile_value} INNER JOIN {profile_field} ON {profile_value}.fid = {profile_field}.fid WHERE {profile_field}.name = 'profile_otc_imgonair' AND {profile_value}.uid = '$djid'");
      $forumquery = db_query("SELECT {profile_value}.value AS value FROM {profile_value} INNER JOIN {profile_field} ON {profile_value}.fid = {profile_field}.fid WHERE {profile_field}.name = 'profile_otc_forum' AND {profile_value}.uid = '$djid'");
      if ((($i + 3)%3) == 0) {
        // First column
        if ($firstrun) {
          $firstrun = false;
          $output .= "<div style=\"float: left; width: 100%\"><div class=\"otc-djs-col1\">";
        } else {
          $output .= "</div><div style=\"float: left; width: 100%\"><div class=\"otc-djs-col1\">";
        }
      } else if ((($i + 3)%3) == 1) {
        // Second column
        $output .= "<div class=\"otc-djs-col2\">";
      } else {
        // Last column
        $output .= "<div class=\"otc-djs-col3\">";
      }
      $imagequerylist = $imagequery->fetch();
      //$output .= $imagequerylist->value;
      if (is_object($imagequerylist)) {
        if (file_exists("djdata/images/onair/" . $imagequerylist->value . ".png")) {
          $output .= "<div style=\"float: left; margin-right: 5px; margin-bottom: 5px\">";
          $output .= "<img src=\"/djdata/images/onair/" . $imagequerylist->value . ".png\" alt=\"" . $mainquerylist[$i]->name . "\" />";
          $output .= "</div>";
        }
      }
      $output .= "<div style=\"min-height: 80px\">";
      $output .= "<strong>" . $mainquerylist[$i]->name . "</strong>";
      if (in_array($mainquerylist[$i]->uid,$onairdjlist)) {
        $output .= " - <font color=\"red\">On Air</font>";
      } else if (in_array($mainquerylist[$i]->uid,$upnextdjlist)) {
        $output .= " - <font color=\"orange\">Up Next</font>";
      }
      if (isset($schedulelist)) {
        $usertimearray = array();
        for ($j=0;$j<sizeof($schedulelist);$j++) {
          if (($schedulelist[$j][2] == $mainquerylist[$i]->uid) AND (($schedulelist[$j][4] != 2) OR (($schedulelist[$j][4] == 2) AND (date("G",strtotime($schedulelist[$j][0])) >= 6)))) {
            if (sizeof($schedulelist) > ($j+1)) {
              $usertimearray[date("N",strtotime($schedulelist[$j][0]))][] = array(date("H:i",strtotime($schedulelist[$j][0])),date("H:i",strtotime($schedulelist[$j+1][0])));
            } else {
              $usertimearray[date("N",strtotime($schedulelist[$j][0]))][] = array(date("H:i",strtotime($schedulelist[$j][0])),date("H:i",strtotime($schedulelist[0][0])+86400*7));
            }
          }
          if (array_key_exists($mainquerylist[$i]->uid,$djlist)) {
            if (in_array($schedulelist[$j][3],$djlist[$mainquerylist[$i]->uid])  AND (($schedulelist[$j][4] != 2) OR (($schedulelist[$j][4] == 2) AND (date("G",strtotime($schedulelist[$j][0])) >= 6)))) {
              if (sizeof($schedulelist) > ($j+1)) {
                $usertimearray[date("N",strtotime($schedulelist[$j][0]))][] = array(date("H:i",strtotime($schedulelist[$j][0])),date("H:i",strtotime($schedulelist[$j+1][0])));
              } else {
                $usertimearray[date("N",strtotime($schedulelist[$j][0]))][] = array(date("H:i",strtotime($schedulelist[$j][0])),date("H:i",strtotime($schedulelist[0][0])+86400*7));
              }
            }
          }
        }
        $userhasshows = false;
        for ($k=1;$k<8;$k++) {
          if (array_key_exists($k,$usertimearray)) {
            $userhasshows = true;
            $output .= "<br />" . date("l",(strtotime("Monday") + (86400*($k-1)))) . " ";
            for ($l=0;$l<sizeof($usertimearray[$k]);$l++) {
              if ($l > 0) {
                $output .= ", ";
              }
              $output .= $usertimearray[$k][$l][0] . " - " . $usertimearray[$k][$l][1];
            }
          }
        }
        if (!$userhasshows) {
          $output .= "<br />Not on air this week";
        }
      }
      $output .= "</div><div style=\"float: right\"><br />";
      $minisitequerylist = $minisitequery->fetch();
      $forumquerylist = $forumquery->fetch();
      $minisitelink = false;
      $contactlink = false;
      $forumlink = false;
      if (is_object($minisitequerylist)) {
        if ($minisitequerylist->value != "") {
          $minisitelink = true;
          $output .= "<a href=\"/" . $minisitequerylist->value . "\">Minisite</a>";
        }
      }
      if (stristr($mainquerylist[$i]->mail,"@offthechartradio.co.uk")) {
        $contactlink = true;
        if ($minisitelink) {
          $output .= " - ";
        }
        $output .= "<a href=\"javascript:openWindow('/player/player.php?activetab=2&amp;recipient=" . $mainquerylist[$i]->uid . "','405','720')\">Contact</a>";
      }
      /*if (is_object($forumquerylist)) {
        if ($forumquerylist->value != "") {
          $forumlink = true;
          if (($minisitelink) OR ($contactlink)) {
            $output .= " - ";
          }
          $output .= "<a href=\"/forums/viewforum.php?f=" . $forumquerylist->value . "\" target=\"_blank\">Forum</a>";
        }
      }*/
      if (($minisitelink) OR ($contactlink)) {
        $output .= " - ";
      }
      $output .= "<a href=\"/music/playlists/" . $mainquerylist[$i]->name . "\">Playlists</a>";
      $output .= "</div></div>";
      if ($lastrun) {
        $output .= "</div>";
      }
    }
  }
  $output .= "</div><br /><div style=\"margin-top: 20px; float: left; position: relative; width: 100%\">";
  // Get shows now...
  $mainshowquery = db_query("SELECT show_id, show_title, show_minisite, show_image, show_email, show_forum FROM {otc_shows} WHERE show_visible = '1' ORDER BY show_title");
  $mainquerylist = $mainshowquery->fetchAll();
  if (sizeof($mainquerylist) > 0) {
    $firstrun = true;
    $lastrun = false;
    for ($i=0;$i<sizeof($mainquerylist);$i++) {
      if ($i == (sizeof($mainquerylist) - 1)) {
        $lastrun = true;
      }
      if ((($i + 3)%3) == 0) {
        // First column
        if ($firstrun) {
          $firstrun = false;
          $output .= "<div style=\"float: left; width: 100%\"><div class=\"otc-djs-col1\">";
        } else {
          $output .= "</div><div style=\"float: left; width: 100%\"><div class=\"otc-djs-col1\">";
        }
      } else if ((($i + 3)%3) == 1) {
        // Second column
        $output .= "<div class=\"otc-djs-col2\">";
      } else {
        // Last column
        $output .= "<div class=\"otc-djs-col3\">";
      }
      if ($mainquerylist[$i]->show_image != "") {
        if (file_exists("djdata/images/onair/" . $mainquerylist[$i]->show_image . ".png")) {
          $output .= "<div style=\"float: left; margin-right: 5px; margin-bottom: 5px\">";
          $output .= "<img src=\"/djdata/images/onair/" . $mainquerylist[$i]->show_image . ".png\" alt=\"" . $mainquerylist[$i]->show_title . "\" />";
          $output .= "</div>";
        }
      }
      $output .= "<div style=\"min-height: 80px\">";
      $output .= "<strong>" . $mainquerylist[$i]->show_title . "</strong>";
      if (in_array($mainquerylist[$i]->show_id,$onairshowlist)) {
        $output .= " - <font color=\"red\">On Air</font>";
      } else if (in_array($mainquerylist[$i]->show_id,$upnextshowlist)) {
        $output .= " - <font color=\"orange\">Up Next</font>";
      }
      if (isset($schedulelist)) {
        $usertimearray = array();
        for ($j=0;$j<sizeof($schedulelist);$j++) {
          if (($schedulelist[$j][3] == $mainquerylist[$i]->show_id) AND ($schedulelist[$j][4] != 2)) {
            if (sizeof($schedulelist) > ($j+1)) {
              $usertimearray[date("N",strtotime($schedulelist[$j][0]))][] = array(date("H:i",strtotime($schedulelist[$j][0])),date("H:i",strtotime($schedulelist[$j+1][0])));
            } else {
              $usertimearray[date("N",strtotime($schedulelist[$j][0]))][] = array(date("H:i",strtotime($schedulelist[$j][0])),date("H:i",strtotime($schedulelist[0][0])+86400*7));
            }
          }
        }
        $userhasshows = false;
        for ($k=1;$k<8;$k++) {
          if (array_key_exists($k,$usertimearray)) {
            $userhasshows = true;
            $output .= "<br />" . date("l",(strtotime("Monday") + (86400*($k-1)))) . " ";
            for ($l=0;$l<sizeof($usertimearray[$k]);$l++) {
              if ($l > 0) {
                $output .= ", ";
              }
              $output .= $usertimearray[$k][$l][0] . " - " . $usertimearray[$k][$l][1];
            }
          }
        }
        if (!$userhasshows) {
          $output .= "<br />Not on air this week";
        }
      }
      $output .= "</div><div style=\"float: right\"><br />";
      $minisitelink = false;
      $forumlink = false;
      if ($mainquerylist[$i]->show_minisite != "") {
        $minisitelink = true;
        $output .= "<a href=\"/" . $mainquerylist[$i]->show_minisite . "\">Minisite</a>";
      }
      /*if ($mainquerylist[$i]->show_forum != "") {
        $forumlink = true;
        if ($minisitelink) {
          $output .= " - ";
        }
        $output .= "<a href=\"/forums/viewforum.php?f=" . $mainquerylist[$i]->show_forum . "\" target=\"_blank\">Forum</a>";
      }*/
      if ($minisitelink) {
        $output .= " - ";
      }
      $output .= "<a href=\"/music/playlists/" . $mainquerylist[$i]->show_title . "\">Playlists</a>";

      $output .= "</div></div>";
      if ($lastrun) {
        $output .= "</div>";
      }
    }
  }
  $output .= "</div></div>&nbsp;";
  return t($output);
}
